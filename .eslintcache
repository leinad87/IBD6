[{"/Users/darguelles/own/IBD6/src/index.tsx":"1","/Users/darguelles/own/IBD6/src/reportWebVitals.ts":"2","/Users/darguelles/own/IBD6/src/App.tsx":"3","/Users/darguelles/own/IBD6/src/components/Home.tsx":"4","/Users/darguelles/own/IBD6/src/components/Modelo.tsx":"5","/Users/darguelles/own/IBD6/src/components/modeloD6/DropZone.tsx":"6","/Users/darguelles/own/IBD6/src/components/modelo720/DropZone.tsx":"7","/Users/darguelles/own/IBD6/src/parsers/interactivebrokers.tsx":"8","/Users/darguelles/own/IBD6/src/parsers/degiro.tsx":"9","/Users/darguelles/own/IBD6/src/builder/modelo720.tsx":"10","/Users/darguelles/own/IBD6/src/aforix/Position.tsx":"11","/Users/darguelles/own/IBD6/src/parsers/IBactivity.tsx":"12","/Users/darguelles/own/IBD6/src/aforix/D6.tsx":"13"},{"size":546,"mtime":1673084859036,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1673084859037,"results":"16","hashOfConfig":"15"},{"size":2270,"mtime":1673084859034,"results":"17","hashOfConfig":"15"},{"size":857,"mtime":1673084859034,"results":"18","hashOfConfig":"15"},{"size":1209,"mtime":1673084859034,"results":"19","hashOfConfig":"15"},{"size":12834,"mtime":1673084859035,"results":"20","hashOfConfig":"15"},{"size":9460,"mtime":1673084859035,"results":"21","hashOfConfig":"15"},{"size":1353,"mtime":1673084859037,"results":"22","hashOfConfig":"15"},{"size":1991,"mtime":1673084859037,"results":"23","hashOfConfig":"15"},{"size":3618,"mtime":1673085898208,"results":"24","hashOfConfig":"15"},{"size":1524,"mtime":1673084859034,"results":"25","hashOfConfig":"15"},{"size":2509,"mtime":1673084859037,"results":"26","hashOfConfig":"15"},{"size":3016,"mtime":1673084859034,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fyczl0",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"/Users/darguelles/own/IBD6/src/index.tsx",[],"/Users/darguelles/own/IBD6/src/reportWebVitals.ts",[],"/Users/darguelles/own/IBD6/src/App.tsx",["62"],"import React from 'react';\nimport './App.css';\nimport { Button, Alert, Navbar, Nav, Container, Image, Badge } from 'react-bootstrap';\nimport GitHub_Logo_White from './images/GitHub_Logo_White.png';\nimport BuyACoffeeImage from './images/buy-a-coffee.gif';\nimport Modelo from './components/Modelo'\nimport Home from './components/Home'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport { useCookies } from 'react-cookie';\n\nfunction App() {\n\n  const [cookies, setCookie] = useCookies(['acceptCookies']);\n\n  const acceptCookies = () => {\n    setCookie('acceptCookies', true, { path: '/' });\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar bg=\"dark\" sticky=\"top\" variant=\"dark\">\n          <Container>\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/\">Inicio</Nav.Link>\n              <Nav.Link href=\"/modelo/D6\">Modelo D6</Nav.Link>\n              <Nav.Link href=\"/modelo/720\">Modelo 720<Badge pill variant=\"warning\">BETA</Badge ></Nav.Link>\n            </Nav>\n            \n            <Button variant=\"info\" target=\"_blank\" href=\"https://paypal.me/leinad87\">\n              <a><Image src={BuyACoffeeImage} width=\"100px\" /></a>\n            </Button>\n            <a href=\"https://github.com/leinad87/IBD6\"><Image src={GitHub_Logo_White} width=\"100px\" /></a>\n          </Container>\n\n        </Navbar >\n        <div className=\"content\" >\n          <Switch>\n            <Route path=\"/modelo\">\n              <Modelo/>\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n\n      <Alert variant=\"dark\" show={!cookies.acceptCookies} className=\"ml-3 fixed-bottom \" style={{ right: \"auto\" }}>\n        <p>Este sitio web usa cookies de Google para ofrecer sus servicios y analizar el tráfico.</p>\n        <hr />\n        <div className=\"d-flex justify-content-end\">\n          <Button className=\"mr-3\" variant=\"info\" href=\"https://policies.google.com/technologies/cookies\" about=\"_blank\">\n            Más información\n          </Button>\n          <Button variant=\"success\" onClick={() => acceptCookies()}>\n            Vale!\n          </Button>\n        </div>\n      </Alert>\n    </div>\n  );\n\n}\nexport default App;\n","/Users/darguelles/own/IBD6/src/components/Home.tsx",[],"/Users/darguelles/own/IBD6/src/components/Modelo.tsx",["63","64","65","66"],"import React, {Component} from 'react';\n\nimport { Alert } from 'react-bootstrap';\nimport DropZone from \"./modelo720/DropZone\";\nimport DropZoneD6 from \"./modeloD6/DropZone\"\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    useRouteMatch\n  } from \"react-router-dom\";\n\nexport default function Modelo(){\n\n        \n    let match = useRouteMatch();\n    return (\n        <div >\n            <Alert variant='warning'>\n                <p className=\"container mb-0\">⚠️ Este software puede tener errores, uselo bajo su responsabilidad.</p>\n            </Alert>\n            <div  className=\"container\" >\n                \n            <Switch>\n                <Route path={`${match.path}/720`}>\n                    <DropZone />\n                </Route>\n                <Route path={`${match.path}/D6`}>\n                    <DropZoneD6 />\n                </Route>\n            </Switch>\n                \n            <p className=\"mt-5\">Si quieres colaborar puedes hacerlo en <a target=\"_blank\" href=\"https://github.com/leinad87/IBD6\">https://github.com/leinad87/IBD6</a> o <a target=\"_blank\" href=\"https://paypal.me/leinad87\">invitándome a un café.</a></p>\n            </div>\n \n        </div >\n    );\n\n}\n","/Users/darguelles/own/IBD6/src/components/modeloD6/DropZone.tsx",["67","68","69"],"import React from 'react';\nimport { Form, Alert, Row, Col, Accordion, Card, Button, Image } from 'react-bootstrap';\nimport { D6 } from '../../aforix/D6';\nimport { Position } from '../../aforix/Position';\nimport DegiroParser from '../../parsers/degiro';\nimport InteractiveBrokersParser from '../../parsers/interactivebrokers'\n\nimport './DropZone.css';\n\nexport default class DropZoneD6 extends React.Component {\n\n    state = {\n        text: '',\n        default_valor: -1,\n        default_emisor: -1,\n        default_pais: '',\n        holders: 1,\n    }\n\n\n    downloadTxtFile = (name: string, content: string) => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([content], { type: 'application/aforixm' });\n        element.href = URL.createObjectURL(file);\n        element.download = `${name}.aforixm`;\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n    }\n\n    // https://blog.logrocket.com/create-a-drag-and-drop-component-with-react-dropzone/\n    dragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    }\n\n    dragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    }\n\n    dragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    }\n\n    fileDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        const files = e.dataTransfer.files;\n\n        var promises = [];\n        for (var i = 0; i < files.length; i++) {\n            promises.push(files[i].text())\n        }\n\n        Promise.all(promises).then((file_texts) => {\n            var summary: any = {\n                total_ammount: {},\n            }\n\n            var aforix = Array.from({ length: this.state.holders }, (_, i) => new D6());\n\n            var positions: Position[] = [];\n            var parsers: any[] = [InteractiveBrokersParser, DegiroParser]\n            file_texts.forEach((text) => {\n                var parser_positions: Position[] = []\n                for (var parser_i = 0; parser_i < parsers.length && parser_positions.length == 0; parser_i++) {\n                    console.log(`Trying parser ${parsers[parser_i].name}`)\n                    parser_positions = parsers[parser_i].parse(text, this.state.default_pais, this.state.default_emisor, this.state.default_valor, this.state.holders)\n                    parser_positions = parser_positions.filter(item => item.ISIN)\n\n                    if (parser_positions.length > 0) {\n                        positions = positions.concat(parser_positions)\n                    }\n                }\n            })\n\n            if (positions.length == 0) {\n                this.setState({ text: 'No se han encontrado posiciones en el archivo indicado' })\n                return;\n            }\n\n            positions.forEach((position) => {\n                var splited_position = position.split(this.state.holders);\n                for (var i = 0; i < aforix.length; i++) {\n                    aforix[i].add_position(splited_position[i]);\n                }\n\n                // Sum the value of the position to summary\n                var tmp = summary.total_ammount[position.currency] || 0;\n                summary.total_ammount[position.currency] = tmp + position.value\n            })\n\n            aforix.forEach((doc, idx) => {\n                this.downloadTxtFile(`d6_${idx}`, doc.build())\n            })\n\n            var total_ammount_str = '';\n            for (var key in summary.total_ammount) {\n                total_ammount_str = total_ammount_str + ` ${key}: ${summary.total_ammount[key].toLocaleString('es-ES', { minimumFractionDigits: 2 })}`;\n            }\n\n            this.setState({ text: `Se han encontrado ${positions.length} posiciones abiertas con un valor total de ${total_ammount_str}` });\n\n        })\n    }\n\n\n    render() {\n        return (\n            <div className=\"\">\n\n                <div className=\"mb-3\">\n                    <Accordion>\n                        <Card>\n                            <Card.Header>\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                    Configuración avanzada\n      </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"0\">\n                                <Card.Body>\n                                    <Form>\n                                        <Row>\n                                            Si lo desea, elija los valores por defecto para el emisor, valor y pais de cada posición.\n                        </Row>\n                                        <Row>\n                                            <Col xs lg=\"4\">\n                                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                                    <Form.Label>7. Emisor</Form.Label>\n                                                    <Form.Control as=\"select\"\n                                                        value={this.state.default_emisor}\n                                                        onChange={e => this.setState({ default_emisor: e.target.value })}>\n                                                        <option value={-1}>- Ninguna</option>\n                                                        <option value={100}>100. Organismos internacionales de carácter multilateral, para emisores no residentes</option>\n                                                        <option value={200}>200. Administraciones Públicas y Corporaciones Regionales y Locales, para emisores no residentes</option>\n                                                        <option value={300}>300. Entidades financieras (sector público y sector privado), para emisores no residentes</option>\n                                                        <option value={400}>400. Entidades no financieras (sector público y sector privado), para emisores no residentes</option>\n                                                        <option value={500}>500. Organismos internacionales de carácter multilateral, para emisores residentes</option>\n                                                        <option value={600}>600. Administraciones Públicas y Corporaciones Regionales y Locales, para emisores residentes</option>\n                                                        <option value={700}>700. Entidades financieras (sector público y sector privado), para emisores residentes</option>\n                                                        <option value={800}>800. Entidades no financieras (sector público y sector privado), para emisores residentes</option>\n                                                    </Form.Control>\n                                                </Form.Group>\n                                            </Col>\n\n                                            <Col xs lg=\"4\">\n                                                <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                                                    <Form.Label>8. Valor</Form.Label>\n                                                    <Form.Control as=\"select\"\n                                                        value={this.state.default_valor}\n                                                        onChange={e => this.setState({ default_valor: e.target.value })}>\n                                                        <option value={-1}>- Ninguna</option>\n                                                        <option value={0}>00. Derechos de suscripción y otros derechos análogos</option>\n                                                        <option value={1}>01. Acciones con derecho a voto</option>\n                                                        <option value={2}>02. Acciones sin derecho a voto</option>\n                                                        <option value={3}>03. Participaciones en forndos de inversión</option>\n                                                        <option value={5}>05. Deuda a largo plazo emitida por Administraciones Públicas, Corporaciones Regionales y Locales</option>\n                                                        <option value={6}>06. Otra deuda a largo plazo no convertible en acciones</option>\n                                                        <option value={7}>07. Otra deuda a largo plazo convertible en acciones</option>\n                                                        <option value={10}>10. Deuda a corto plazo emitida por Administraciones Públicas, Corporaciones Regionales y Locales</option>\n                                                        <option value={11}>11. Otra deuda a corto plazo</option>\n                                                        <option value={41}>41. Otros valores y derechos</option>\n                                                    </Form.Control>\n                                                </Form.Group>\n                                            </Col>\n\n                                            <Col xs lg=\"4\">\n                                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                                    <Form.Label>9.Pais</Form.Label>\n                                                    <Form.Control placeholder=\"Ejemplo: US\"\n                                                        value={this.state.default_pais}\n                                                        onChange={e => this.setState({ default_pais: e.target.value })} />\n                                                </Form.Group>\n                                            </Col>\n\n                                        </Row>\n                                        <Row>\n                                            <Col xs lg=\"4\">\n                                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                                    <Form.Label>¿Cúantos titulares tiene la cuenta?</Form.Label>\n                                                    <Form.Control as=\"select\" value={this.state.holders}\n                                                        onChange={e => this.setState({ holders: e.target.value })}>\n                                                        <option>1</option>\n                                                        <option>2</option>\n                                                        <option>3</option>\n                                                        <option>4</option>\n                                                        <option>5</option>\n                                                    </Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                    </Form>\n\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                    </Accordion>\n\n                </div>\n\n                <div className=\"drop-container\"\n\n                    onDragOver={this.dragOver}\n                    onDragEnter={this.dragEnter}\n                    onDragLeave={this.dragLeave}\n                    onDrop={this.fileDrop}\n                >\n                    <div className=\"drop-message\">\n                        <div className=\"upload-icon\"></div>\n                        <p className=\"title\">Arrastra aquí tu fichero csv con la consulta Flex</p>\n                    </div>\n                </div>\n                {this.state.text.length > 0 ?\n                    (<Alert variant=\"dark\" className=\"mt-3\">{this.state.text}</Alert>) : null\n                }\n\n                <Card className=\"mt-5\">\n                    <Card.Body>\n                        <p className=\"info\">\n                            Crea en InteractiveBrokers una nueva consulta flex con las sección <b>Posiciones Abiertas</b> y campos:\n                            <ul className=\"info\">\n                                <li>Symbol</li>\n                                <li>Description</li>\n                                <li>ISIN</li>\n                                <li>Quantity</li>\n                                <li>Multiplier</li>\n                                <li>Position Value</li>\n                                <li>Mark Price</li>\n                                <li>Currency</li>\n                            </ul>\n                        Ejecuta la consulta con el perido <b>Mes pasado</b> y format <b>CSV</b>. Guarda el fichero y arrastreloo para generar el informe D6.</p>\n                    </Card.Body>\n                 </Card>\n            </div>\n        )\n    }\n}\n","/Users/darguelles/own/IBD6/src/components/modelo720/DropZone.tsx",["70","71","72","73","74","75"],"import React from 'react';\nimport { Form, Alert, Row, Col, Table, Pagination, Button, Badge, Modal } from 'react-bootstrap';\n\nimport InteractiveBrokersActivity from '../../parsers/IBactivity';\nimport Modelo720 from '../../builder/modelo720'\nimport './DropZone.css';\n\nimport countries from '../../static/countries.json'\nimport { Position } from '../../aforix/Position';\nimport InformesImage from '../../images/informes.png';\nimport { exception } from 'console';\n\nexport default class DropZone extends React.Component {\n\n    data: InteractiveBrokersActivity | null = null\n\n    state = {\n        dni: '',\n        text: '',\n        status: 'dark',\n        broker_country: '',\n        eurusd: '',\n        filename: '',\n        active_page: 1,\n        modalShow: false,\n    }\n\n\n    downloadTxtFile = (name: string, content: string) => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([content], { type: 'application/aforixm' });\n        element.href = URL.createObjectURL(file);\n        element.download = `${name}.720`;\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n    }\n\n    // https://blog.logrocket.com/create-a-drag-and-drop-component-with-react-dropzone/\n    dragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    }\n\n    dragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    }\n\n    dragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    }\n\n    fileDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        this.uploadFile(e.dataTransfer.files);\n    }\n\n    onFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        this.uploadFile(e!.target!.files!);\n    };\n\n    uploadFile(files: any) {\n\n        var promises = [];\n        for (var i = 0; i < files.length; i++) {\n            this.setState({ filename: files[i].name });\n            promises.push(files[i].text())\n        }\n\n        Promise.all(promises)\n            .then((file_texts) => {\n                this.data = new InteractiveBrokersActivity(file_texts[0]);\n            }).then(() => {\n\n                let warning = (this.data!.open_positions!.filter((item)=>item.ISIN?false:true).length > 0)\n\n                if (warning)\n                    this.setState({ status: 'warning', text: 'Fichero cargado. Revise los elementos' })\n                else\n                    this.setState({ status: 'success', text: 'Fichero cargado' })\n            }).catch(() => {\n                this.setState({ status: 'danger', text: 'Ha ocurrido un error al leer el fichero.' })\n            })\n    }\n\n    displayForex() {\n        const items = [];\n\n        if (this.data != null) {\n            for (var key in this.data.forex) {\n                if (key == \"EUR\") continue;\n                items.push(<Form.Group>\n                    <Form.Label>EUR{key}</Form.Label>\n                    <Form.Control placeholder={this.data!.forex[key].toFixed(4)}\n                        value={this.state.eurusd}\n                        onChange={e => this.setState({ eurusd: e.target.value })} />\n                    <Form.Text className=\"text-muted\">\n                        Valor calculado a partir del informe subido\n                    </Form.Text>\n                </Form.Group>)\n            }\n        }\n\n        return items;\n    }\n\n\n\n    displayElements() {\n\n        if (this.data == null) { return }\n        let items = this.data!.open_positions!.map((item: Position, index: number) => {\n            return (\n                <tr>\n                    <td>{index + 1}</td>\n                    <td>{item.description}</td>\n                    <td>{item.ISIN}</td>\n                    <td>{item.count}</td>\n                    <td>{item.value}{item.currency}</td>\n                    <td>{(item.value / this.data!.forex[item.currency]).toFixed(2)}EUR</td>\n                </tr>\n            )\n        });\n\n        let items_pagination = [];\n        for (let number = 1; number <= ((items.length) / 10) + 1; number++) {\n            items_pagination.push(\n                <Pagination.Item key={number} active={number === this.state.active_page} onClick={() => this.setState({ active_page: number })}>\n                    {number}\n                </Pagination.Item>,\n            );\n        }\n        return (\n            <div>\n                <Table striped bordered hover size=\"sm\" variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Nombre</th>\n                            <th>ISIN</th>\n                            <th>Número</th>\n                            <th>Valor</th>\n                            <th>Valor en euros</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {items.slice((this.state.active_page - 1) * 10, this.state.active_page * 10)}\n                    </tbody>\n                </Table>\n                <Pagination size=\"sm\">{items_pagination}</Pagination>\n            </div>\n        )\n    }\n\n\n    MyVerticallyCenteredModal(props: any) {\n        return (\n            <Modal\n                {...props}\n                size=\"xl\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Como generar el informe anual en Interactive Brokers\n              </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ul>\n                        <li>Dirigete al apartado informes de Interactive Brokers</li>\n                        <li>En la pestaña Extractos, ejecuta la consulta <b>Actividad</b> con las siguientes opciones:</li>\n                        <ul>\n                            <li>Periodo: <b>Anual</b></li>\n                            <li>Fecha: <b>2020</b></li>\n                            <li>Formato: <b>CSV</b></li>\n                        </ul>\n                        <li>Es posible que tengas que esperar hasta que se genere el informe. A la derecha de pantalla informes puedes observar el progreso.</li>\n                        <li>Si tu cuenta ha sido migrada recientemente, puede que no puedas ver la opción <b>Anual</b>. Para ello, haz click en tu identificador de cuenta junto al titulo <b>Informes</b> de la página para cambiar a tu antigua cuenta.</li>\n                        <img src={InformesImage} style={{ width: \"100%\" }} />\n                    </ul>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={props.onHide}>Cerrar</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"\"\n                onDragOver={this.dragOver}\n                onDragEnter={this.dragEnter}\n                onDragLeave={this.dragLeave}\n                onDrop={this.fileDrop}>\n\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>DNI</Form.Label>\n                        <Form.Control placeholder=\"12345678Z\" value={this.state.dni}\n                            onChange={e => this.setState({ dni: e.target.value })} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"broker\">\n                        <Form.Label>País del broker</Form.Label>\n                        <Form.Control value={this.state.broker_country}\n                            onChange={e => this.setState({ broker_country: e.target.value })} as=\"select\" >\n                            <option value=''></option>\n                            {countries.map((c) => {\n                                return <option value={c['code']}>{c['text'].slice(0, 120)}{(c['text'].length > 120) ? '...' : ''}</option>\n                            })}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>\n                            Informe anual Interacive Brokers\n                            <a href=\"#\"><Badge variant=\"info\" onClick={() => this.setState({ modalShow: true })}>+Info</Badge ></a>\n                            <this.MyVerticallyCenteredModal\n                                show={this.state.modalShow}\n                                onHide={() => this.setState({ modalShow: false })}\n                            />\n\n                        </Form.Label>\n                        <Form.File onChange={this.onFileChange}\n                            id=\"custom-file\"\n                            label={this.state.filename}\n                            custom\n                        />\n                    </Form.Group>\n                    {this.displayForex()}\n                    {this.displayElements()}\n\n                </Form>\n\n                {this.state.text.length > 0 ?\n                    (<Alert variant={this.state.status} className=\"mt-3\">{this.state.text}</Alert>) : null\n                }\n\n\n                {this.data ?\n                    <Button onClick={() => this.downloadTxtFile(this.state.dni, new Modelo720(this.state.dni, this.state.broker_country, this.data!)!.build())}>Descargar</Button>\n                    : null\n                }\n            </div>\n        )\n    }\n}\n","/Users/darguelles/own/IBD6/src/parsers/interactivebrokers.tsx",["76"],"import { isMetaProperty } from 'typescript';\nimport { Position } from '../aforix/Position';\n\nexport default class InteractiveBrokersParser {\n    static parse(file: string, default_pais: string, default_emisor: number, default_valor: number, holders: number) {\n\n        var headers: { [key: string]: number } = {};\n        var skip = true;\n        var positions: Position[] = [];\n\n        file.split(\"\\n\").forEach((line) => {\n            if (line.includes(\"ISIN\")) {\n                skip = false\n                line.split(\",\").forEach((val, idx) => {\n                    headers[val.slice(1, -1)] = idx;\n                })\n            } else if (!skip && line.length > 0) {\n                var data = line.split(\",\").map((x) => x.slice(1, -1));\n\n                var count = parseInt(data[headers['Quantity']]);\n                var value = parseFloat(data[headers['PositionValue']]);\n                var currency = data[headers['CurrencyPrimary']];\n\n                positions.push(new Position(\n                    data[headers['ISIN']],\n                    data[headers['Description']],\n                    count,\n                    value,\n                    currency,\n                    default_pais,\n                    default_valor,\n                    default_emisor\n                ))\n            }\n        })\n\n        return positions;\n    }\n}","/Users/darguelles/own/IBD6/src/parsers/degiro.tsx",["77","78"],"import { Position } from '../aforix/Position';\n\nconst ISIN = 'Symbol/ISIN';\nconst NAME = 'Producto'\nconst COUNT = 'Cantidad'\nconst PRICE = 'Precio de'\nconst VALUE = 'Valor local'\nconst VALUE_EUR = 'Valor en EUR'\n\nexport default class DegiroParser {\n    static parse(file: string, default_pais: string, default_emisor: number, default_valor: number, holders: number): Position[] {\n        var headers: { [key: string]: number };\n        var positions: Position[] = [];\n        var re = /\"(\\d+),(\\d+)\"/g\n\n        file.split(\"\\n\").forEach((line) => {\n            if (line.includes(\"ISIN\")) {\n                headers = DegiroParser.getHeaders(line)\n            } else if (line.length > 0) {\n                // remove quotes\n                var data = line.replaceAll(re, \"$1.$2\").split(\",\")\n                console.log(data)\n                if (!data[headers[NAME]].includes(\"CASH\")) {\n                    var { value, currency } = DegiroParser.getCurrencyValue(data[headers[VALUE]]);\n                    positions.push(new Position(\n                        data[headers[ISIN]],\n                        data[headers[NAME]],\n                        parseInt(data[headers[COUNT]]),\n                        value,\n                        currency,\n                        default_pais,\n                        default_valor,\n                        default_emisor\n                    ))\n                }\n            }\n        })\n\n        return positions;\n    }\n\n    static getHeaders(line: string): { [key: string]: number } {\n        var result: { [key: string]: number } = {}\n\n        line.split(\",\").forEach((val, idx) => {\n            result[val] = idx\n        })\n\n        return result;\n    }\n\n    static getCurrencyValue(price: string) {\n        var value: number;\n        var currency: string;\n\n        var data = price.split(\" \");\n        value = parseFloat(data[1]);\n        currency = data[0];\n\n        return {\n            value: value,\n            currency: currency\n        }\n    }\n}","/Users/darguelles/own/IBD6/src/builder/modelo720.tsx",[],"/Users/darguelles/own/IBD6/src/aforix/Position.tsx",[],"/Users/darguelles/own/IBD6/src/parsers/IBactivity.tsx",["79","80","81","82","83","84","85","86"],"import { SSL_OP_EPHEMERAL_RSA } from 'constants';\nimport { parse } from 'papaparse';\nimport { Position } from '../aforix/Position';\n\nconst STATEMENT = \"Statement\";\nconst OPEN_POSITIONS = \"Posiciones abiertas\";\nconst INFO = \"Información de instrumento financiero\"\nconst ACCOUNT_INFO = \"Información sobre la cuenta\"\n\n\nexport default class InteractiveBrokersActivity {\n    open_positions: Position[];\n    data: any;\n    forex: {[name:string]: number};\n\n    constructor(file: string) {\n        this.open_positions = [];\n        this.data = {}\n        this.forex = {'EUR': 1}\n\n        this.parse(file)\n    }\n\n    getName() {\n        return this.data[ACCOUNT_INFO]\n                .filter((e:any) => e['Nombre del campo'] == \"Nombre\")[0][\"Valor del campo\"];\n    }\n\n    parse(file: string) {\n\n        let groups = file.split(\"\\n\")\n            .map((line) => [line.replace(/^\\s+|\\s+$/g, '').split(\",\")[0], line])\n            .reduce((acc: any, val) => {\n                let key = val[0];\n                let line = val[1];\n\n                if (key in acc)\n                    acc[key] = acc[key] + \"\\n\" + line\n                else\n                    acc[key] = line\n\n                return acc\n            }, {})\n\n\n        for (var key in groups) {\n            parse(groups[key], {\n                header: true,\n                complete: (result) => { groups[key] = result.data }\n            })\n        }\n\n        this.data = groups;\n\n        let info = groups[INFO].reduce((acc: any, val: any) => {\n            acc[val[\"Símbolo\"]] = {\n                'Name': val[\"Descripción\"],\n                'ISIN': val[\"Id. de seguridad\"]\n            }\n            return acc;\n        }, {})\n        var result = groups[OPEN_POSITIONS]\n            .filter((row: any) => row['Header'] == 'Data')\n            .map((item: any) => {\n                item['ISIN'] = info[item[\"Símbolo\"]]?.['ISIN'] ?? ''\n                item['Name'] = info[item[\"Símbolo\"]]?.['Name'] ?? ''\n                return item;\n            })\n\n        this.open_positions = result.map((p: any) => {\n            return new Position(p['ISIN'], p['Name'], p['Cantidad'], p['Valor'], p['Divisa'], 'Country', 0, 0)\n        });\n\n        groups[OPEN_POSITIONS]\n            .filter((row:any) => row['Header'] == 'Total')\n            .map((row:any, position:number, elements:any) =>{\n                if( row['Divisa'] != 'EUR' ){\n                    this.forex[row['Divisa']] = row['Valor']/elements[position+1]['Valor']\n                }\n            })\n    }\n}\n","/Users/darguelles/own/IBD6/src/aforix/D6.tsx",["87","88","89","90","91"],"import { ReactElement, createElement } from \"react\";\n\nimport { Position } from \"./Position\"\n\nconst ReactDOMServer = require(\"react-dom/server\");\n\nconst campo = (code: number, value: any) => {\n    var codigo = createElement('Codigo', null, code.toString(16).toUpperCase())\n    var datos = createElement('Datos', null, value)\n    var campo = createElement('Campo', null, [codigo, datos])\n\n    return campo\n}\n\nexport class D6 {\n\n    positions: Position[]\n\n    constructor() {\n        this.positions = []\n    }\n\n    add_position(position: Position) {\n        this.positions.push(position)\n    }\n\n    format_number(number: number, decimals: number) {\n        return number.toLocaleString('es-ES', { minimumFractionDigits: decimals })\n    }\n\n    build_page(page_position: number, positions: Position[]) {\n        var tipo = createElement('Tipo', null, page_position == 1 ? 'D61' : 'D62')\n\n        var first_field_code = page_position == 1 ? 0x2E9 : 0x327;\n\n        var campos: ReactElement[] = []\n        campos.push(campo(page_position == 1 ? 0x2DB : 0x320, \"D\"))\n        campos.push(campo(page_position == 1 ? 0x2DC : 0x321, 2020))\n\n        positions.forEach((pos, idx) => {\n            campos.push(campo(first_field_code - 1, \"N\"))\n            campos.push(campo(first_field_code, pos.ISIN))\n            campos.push(campo(first_field_code + 1, pos.description))\n            if (pos.emisor > 0)\n                campos.push(campo(first_field_code + 2, pos.emisor))\n            if (pos.valor > 0)\n                campos.push(campo(first_field_code + 3, String(pos.valor).padStart(2, '0')))\n\n            if (pos.country.length > 0)\n                campos.push(campo(first_field_code + 4, pos.country))\n            campos.push(campo(first_field_code + 5, pos.currency))\n            campos.push(campo(first_field_code + 6, this.format_number(pos.count, 0)))\n            campos.push(campo(first_field_code + 8, this.format_number(pos.value, 2)))\n\n            first_field_code = first_field_code + 0xC;\n        })\n\n        var campos_node = createElement('Campos', null, campos)\n\n        var page = createElement('Pagina', null, [tipo, campos_node])\n\n        return page\n    }\n\n    build() {\n        var tipo = createElement('Tipo', null, 'D-6')\n        var version = createElement('Version', null, 'R10')\n\n        var pages = 0;\n\n        var idx = 0;\n        var content = [tipo, version]\n        console.log(\"Building aforix file with \" + this.positions.length + \" elements\")\n        while (idx < this.positions.length) {\n            console.log(\"Adding page \" + pages)\n            const page_size: number = (pages == 0 ? 3 : 6);\n            content.push(this.build_page(pages + 1, this.positions.slice(idx, idx + page_size)))\n\n            idx = idx + page_size;\n            pages = pages + 1;\n        }\n\n        var root = createElement('Formulario', null, content) // Root element\n\n        var xml = ReactDOMServer.renderToStaticMarkup(root);\n        return \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" + xml;\n\n    }\n\n}\n\n\n",{"ruleId":"92","severity":1,"message":"93","line":36,"column":15,"nodeType":"94","endLine":36,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":1,"column":16,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"99","line":8,"column":22,"nodeType":"97","messageId":"98","endLine":8,"endColumn":28},{"ruleId":"100","severity":1,"message":"101","line":34,"column":72,"nodeType":"94","messageId":"102","endLine":34,"endColumn":131,"fix":"103"},{"ruleId":"100","severity":1,"message":"101","line":34,"column":170,"nodeType":"94","messageId":"102","endLine":34,"endColumn":223,"fix":"104"},{"ruleId":"95","severity":1,"message":"105","line":2,"column":58,"nodeType":"97","messageId":"98","endLine":2,"endColumn":63},{"ruleId":"106","severity":1,"message":"107","line":63,"column":93,"nodeType":"108","messageId":"109","endLine":63,"endColumn":95},{"ruleId":"106","severity":1,"message":"107","line":74,"column":34,"nodeType":"108","messageId":"109","endLine":74,"endColumn":36},{"ruleId":"95","severity":1,"message":"110","line":2,"column":23,"nodeType":"97","messageId":"98","endLine":2,"endColumn":26},{"ruleId":"95","severity":1,"message":"111","line":2,"column":28,"nodeType":"97","messageId":"98","endLine":2,"endColumn":31},{"ruleId":"95","severity":1,"message":"112","line":11,"column":10,"nodeType":"97","messageId":"98","endLine":11,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":90,"column":25,"nodeType":"108","messageId":"109","endLine":90,"endColumn":27},{"ruleId":"113","severity":1,"message":"114","line":179,"column":25,"nodeType":"94","endLine":179,"endColumn":78},{"ruleId":"92","severity":1,"message":"115","line":218,"column":29,"nodeType":"94","endLine":218,"endColumn":41},{"ruleId":"95","severity":1,"message":"116","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":24},{"ruleId":"95","severity":1,"message":"117","line":6,"column":7,"nodeType":"97","messageId":"98","endLine":6,"endColumn":12},{"ruleId":"95","severity":1,"message":"118","line":8,"column":7,"nodeType":"97","messageId":"98","endLine":8,"endColumn":16},{"ruleId":"95","severity":1,"message":"119","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":30},{"ruleId":"95","severity":1,"message":"120","line":5,"column":7,"nodeType":"97","messageId":"98","endLine":5,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":26,"column":58,"nodeType":"108","messageId":"109","endLine":26,"endColumn":60},{"ruleId":"121","severity":1,"message":"122","line":49,"column":27,"nodeType":"123","messageId":"124","endLine":49,"endColumn":68},{"ruleId":"106","severity":1,"message":"107","line":63,"column":49,"nodeType":"108","messageId":"109","endLine":63,"endColumn":51},{"ruleId":"106","severity":1,"message":"107","line":75,"column":48,"nodeType":"108","messageId":"109","endLine":75,"endColumn":50},{"ruleId":"125","severity":1,"message":"126","line":76,"column":59,"nodeType":"123","messageId":"127","endLine":76,"endColumn":61},{"ruleId":"106","severity":1,"message":"128","line":77,"column":35,"nodeType":"108","messageId":"109","endLine":77,"endColumn":37},{"ruleId":"106","severity":1,"message":"107","line":32,"column":62,"nodeType":"108","messageId":"109","endLine":32,"endColumn":64},{"ruleId":"106","severity":1,"message":"107","line":34,"column":46,"nodeType":"108","messageId":"109","endLine":34,"endColumn":48},{"ruleId":"106","severity":1,"message":"107","line":37,"column":41,"nodeType":"108","messageId":"109","endLine":37,"endColumn":43},{"ruleId":"106","severity":1,"message":"107","line":38,"column":41,"nodeType":"108","messageId":"109","endLine":38,"endColumn":43},{"ruleId":"106","severity":1,"message":"107","line":76,"column":46,"nodeType":"108","messageId":"109","endLine":76,"endColumn":48},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"129","text":"130"},{"range":"131","text":"130"},"'Image' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Row' is defined but never used.","'Col' is defined but never used.","'exception' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'isMetaProperty' is defined but never used.","'PRICE' is assigned a value but never used.","'VALUE_EUR' is assigned a value but never used.","'SSL_OP_EPHEMERAL_RSA' is defined but never used.","'STATEMENT' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'key'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","Expected '!==' and instead saw '!='.",[1032,1032]," rel=\"noreferrer\"",[1124,1124]]